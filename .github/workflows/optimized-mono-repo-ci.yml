name: Optimized Mono-Repo CI Pipeline

on:
  push:
    branches-ignore:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [service-1, service-2, service-3]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
        working-directory: ./packages/${{ matrix.service }}

  lint:
    name: Lint Job
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [service-1, service-2, service-3]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint
        working-directory: ./packages/${{ matrix.service }}

  test:
    name: Unit Test Job
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [service-1, service-2, service-3]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test
        working-directory: ./packages/${{ matrix.service }}

  integration-tests:
    name: Integration Test Job
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service: [service-1, service-2, service-3]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run integration tests
        run: npm run test:int
        working-directory: ./packages/${{ matrix.service }}

  security-scan:
    name: Security Scan Job
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:javascript'